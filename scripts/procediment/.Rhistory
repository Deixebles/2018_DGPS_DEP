a[mesany, "Endarr. totals"]<-0
}
if(nrow(d)!=0){a[mesany, "Deduccions"]<-sum(d[,"DEDUCCIONS"])}else{a[mesany, "Deduccions"]<-0}
a[mesany, "Altes Totals"]<-nrow(altes[is.na(altes$EXPEDIENT)==FALSE,])
a[mesany, "Baixes Totals"]<-nrow(baixes) ## NOSTRES -> no ho sabem encara si no és que posem les seves (hem de trobar i calcular)
a[mesany, "Rehabilitacions"]<-nrow(rehab[is.na(rehab$EXPEDIENT)==FALSE,]) # AIXÒ ÉS PROVISIONAL
a[mesany,"Benef. BCN"]<-nrow(quadr[quadr$DEMARCACIÓ=="Barcelona",])
a[mesany, "Import BCN"]<-sum(quadr[quadr$DEMARCACIÓ=="Barcelona","IMPORT"], na.rm=TRUE) # Import total
if("Barcelona"%in% ord$PROVINCIA){
a[mesany, "Ord. BCN"]<-ord[ord$PROVINCIA=="Barcelona","ORDINARIA"]
}else{
a[mesany, "Ord. BCN"]<-0
}
if(nrow(noord)!=0){a[mesany, "No ord. BCN"]<-sum(noord[noord$DEMARCACIÓ=="Barcelona","ENDARRERIMENTS"])}else{a[mesany, "No ord. BCN"]<-0} # revisar amb un cas que tingui no ordinàries
if(nrow(altes)!=0 |nrow(rehab)!=0 | nrow(end)!=0){ # si alguna taula no té files m'hauria de sumar zero
a[mesany, "Endarr BCN"]<-sum(altes[altes$DEMARCACIÓ=="Barcelona","ENDARRERIMENTS"],na.rm=TRUE)+
sum(rehab[rehab$DEMARCACIÓ=="Barcelona","ENDARRERIMENTS"], na.rm=TRUE)+
sum(end[end$DEMARCACIÓ=="Barcelona","ENDARRERIMENTS TOTALS"], na.rm = TRUE)
}else{
a[mesany, "Endarr BCN"]<-0
}
if(nrow(d)!=0){a[mesany, "Deduccions BCN"]<-sum(d[d$DEMARCACIÓ=="Barcelona","DEDUCCIONS"])}else{a[mesany, "Deduccions"]<-0}
a[mesany, "Altes BCN"]<-nrow(altes[altes$DEMARCACIÓ=="Barcelona",])
a[mesany, "Rehab. BCN"]<-nrow(rehab[rehab$DEMARCACIÓ=="Barcelona",])
a[mesany,"Benef. GIR"]<-nrow(quadr[quadr$DEMARCACIÓ=="Girona",])
a[mesany, "Import GIR"]<-sum(quadr[quadr$DEMARCACIÓ=="Girona","IMPORT"], na.rm=TRUE)
if("Girona"%in% ord$PROVINCIA){
a[mesany, "Ord. GIR"]<-ord[ord$PROVINCIA=="Girona","ORDINARIA"]
}else{
a[mesany, "Ord. GIR"]<-0
}
if(nrow(noord)!=0){a[mesany, "No ord. GIR"]<-sum(noord[noord$DEMARCACIÓ=="Girona","ENDARRERIMENTS"])}else{a[mesany, "No ord. GIR"]<-0} # revisar amb un cas que tingui no ordinàries
if(nrow(altes)!=0 |nrow(rehab)!=0 | nrow(end)!=0){ # si alguna taula no té files m'hauria de sumar zero
a[mesany, "Endarr GIR"]<-sum(altes[altes$DEMARCACIÓ=="Girona","ENDARRERIMENTS"],na.rm=TRUE)+
sum(rehab[rehab$DEMARCACIÓ=="Girona","ENDARRERIMENTS"], na.rm=TRUE)+
sum(end[end$DEMARCACIÓ=="Girona","ENDARRERIMENTS TOTALS"], na.rm = TRUE)
}else{
a[mesany, "Endarr GIR"]<-0
}
if(nrow(d)!=0){a[mesany, "Deduccions GIR"]<-sum(d[d$DEMARCACIÓ=="Girona","DEDUCCIONS"])}else{a[mesany, "Deduccions"]<-0}
a[mesany, "Altes GIR"]<-nrow(altes[altes$DEMARCACIÓ=="Girona",])
a[mesany, "Rehab. GIR"]<-nrow(rehab[rehab$DEMARCACIÓ=="Girona",])
a[mesany,"Benef. LLEI"]<-nrow(quadr[quadr$DEMARCACIÓ=="Lleida",])
a[mesany, "Import LLEI"]<-sum(quadr[quadr$DEMARCACIÓ=="Lleida","IMPORT"], na.rm=TRUE)
if("Lleida"%in% ord$PROVINCIA){
a[mesany, "Ord. LLEI"]<-ord[ord$PROVINCIA=="Lleida","ORDINARIA"]
}else{
a[mesany, "Ord. LLEI"]<-0
}
if(nrow(noord)!=0){a[mesany, "No ord. LLEI"]<-sum(noord[noord$DEMARCACIÓ=="Lleida","ENDARRERIMENTS"])}else{a[mesany, "No ord. LLEI"]<-0} # revisar amb un cas que tingui no ordinàries
if(nrow(altes)!=0 |nrow(rehab)!=0 | nrow(end)!=0){ # si alguna taula no té files m'hauria de sumar zero
a[mesany, "Endarr LLEI"]<-sum(altes[altes$DEMARCACIÓ=="Lleida","ENDARRERIMENTS"],na.rm=TRUE)+
sum(rehab[rehab$DEMARCACIÓ=="Lleida","ENDARRERIMENTS"], na.rm=TRUE)+
sum(end[end$DEMARCACIÓ=="Lleida","ENDARRERIMENTS TOTALS"], na.rm = TRUE)
}else{
a[mesany, "Endarr LLEI"]<-0
}
if(nrow(d)!=0){a[mesany, "Deduccions LLEI"]<-sum(d[d$DEMARCACIÓ=="Lleida","DEDUCCIONS"])}else{a[mesany, "Deduccions"]<-0}
a[mesany, "Altes LLEI"]<-nrow(altes[altes$DEMARCACIÓ=="Lleida",])
a[mesany, "Rehab. LLEI"]<-nrow(rehab[rehab$DEMARCACIÓ=="Lleida",])
a[mesany,"Benef. TGN"]<-nrow(quadr[quadr$DEMARCACIÓ=="Tarragona",])
a[mesany, "Import TGN"]<-sum(quadr[quadr$DEMARCACIÓ=="Tarragona","IMPORT"], na.rm=TRUE)
if("Tarragona"%in% ord$PROVINCIA){
a[mesany, "Ord. TGN"]<-ord[ord$PROVINCIA=="Tarragona","ORDINARIA"]
}else{
a[mesany, "Ord. TGN"]<-0
}
if(nrow(noord)!=0){a[mesany, "No ord. TGN"]<-sum(noord[noord$DEMARCACIÓ=="Tarragona","ENDARRERIMENTS"])}else{a[mesany, "No ord. TGN"]<-0} # revisar amb un cas que tingui no ordinàries
if(nrow(altes)!=0 |nrow(rehab)!=0 | nrow(end)!=0){ # si alguna taula no té files m'hauria de sumar zero
a[mesany, "Endarr TGN"]<-sum(altes[altes$DEMARCACIÓ=="Tarragona","ENDARRERIMENTS"],na.rm=TRUE)+
sum(rehab[rehab$DEMARCACIÓ=="Tarragona","ENDARRERIMENTS"], na.rm=TRUE)+
sum(end[end$DEMARCACIÓ=="Tarragona","ENDARRERIMENTS TOTALS"], na.rm = TRUE)
}else{
a[mesany, "Endarr TGN"]<-0
}
if(nrow(d)!=0){a[mesany, "Deduccions TGN"]<-sum(d[d$DEMARCACIÓ=="Tarragona","DEDUCCIONS"])}else{a[mesany, "Deduccions"]<-0}
a[mesany, "Altes TGN"]<-nrow(altes[altes$DEMARCACIÓ=="Tarragona",])
a[mesany, "Rehab. TGN"]<-nrow(rehab[rehab$DEMARCACIÓ=="Tarragona",])
if(mesany=="ene 2018"){
a[mesany, "Baixes BCN"]<-NA
a[mesany, "Baixes GIR"]<-NA
a[mesany, "Baixes LLEI"]<-NA
a[mesany, "Baixes TGN"]<-NA
}else{
a[mesany, "Baixes BCN"]<-nrow(baixes[baixes$DEMARCACIÓ=="Barcelona" & is.na(baixes$DEMARCACIÓ)==FALSE,])
a[mesany, "Baixes GIR"]<-nrow(baixes[baixes$DEMARCACIÓ=="Girona" & is.na(baixes$DEMARCACIÓ)==FALSE,])
a[mesany, "Baixes LLEI"]<-nrow(baixes[baixes$DEMARCACIÓ=="Lleida" & is.na(baixes$DEMARCACIÓ)==FALSE,])
a[mesany, "Baixes TGN"]<-nrow(baixes[baixes$DEMARCACIÓ=="Tarragona" & is.na(baixes$DEMARCACIÓ)==FALSE,])
# Per CPE em surt warning perquè no tinc el quadrament de CPE del mes anterior i per tant no tinc demarcacions a baixes.
}
a[mesany, "Total import"]<-sum(as.numeric(a[mesany, "Ordinària"]),as.numeric(a[mesany, "Endarr. totals"]), # Estarà al final si ho posem així
as.numeric(a[mesany, "Deduccions"]),as.numeric(a[mesany, "No ordinària"]))
# Si tenim ja la llista BAMprestació podem posar:
# a[mesany, "temps mig_altes"]<-mean(BAMLLAR$A$`Temps retard (mesos)`, na.rm = TRUE)
# a[mesany, "temps mig_rehab"]<-mean(BAMLLAR$R$`Temps retard (mesos)`, na.rm = TRUE)
# a[mesany, "temps mig_baixes"]<-mean(BAMLLAR$B$`Temps retard (dies)`, na.rm = TRUE)
return(a) # històric de la prestació corresponent
}
historicnecBas<-totes2(historicnecBas, quadr02_NB, "Necessitats bàsiques", altes_ellsNB, baixes_ellsNB, rehab_ellsNB, endarr_ellsNB, provin_ellsNB, no_ordNB, deduccions_ellsNB)
historiccpnc<-totes2(historiccpnc, quadr02_CPNC, "CPNC", altes_ellsCPNC, baixes_ellsCPNC, rehab_ellsCPNC, endarr_ellsCPNC, provin_ellsCPNC, no_ordCPNC, deduccions_ellsCPNC)
historicllar<-totes2(historicllar, quadr02_LLAR, "Despeses de la llar", altes_ellsLLAR, baixes_ellsLLAR, rehab_ellsLLAR, endarr_ellsLLAR, provin_ellsLLAR, no_ordLLAR, deduccions_ellsLLAR)
historiccpe<-totes2(historiccpe, quadr02_CPE, "Compl. pensió estatal", altes_ellsCPE, baixes_ellsCPE, rehab_ellsCPE, endarr_ellsCPE, provin_ellsCPE, no_ordCPE, deduccions_ellsCPE)
# Tenim l'històric actualitzat per cadascuna de les prestacions per separat
# TAULES PER PRESTACIONS DE L'ANY ACTUAL
anyactualNB<-historicnecBas[historicnecBas$Any==aquestany,]
anyactualCPNC<-historiccpnc[historiccpnc$Any==aquestany,]
anyactualLLAR<-historicllar[historicllar$Any==aquestany,]
anyactualCPE<-historiccpe[historiccpe$Any==aquestany,]
#aquí as.factor
anyactualNB<-anyactualNB[order(anyactualNB$Mes),] # Revisar: compte que aquest order ordena per ordre alfabètic (cal? I si ho deixem que vagi afegint mesos?)
anyactualCPNC<-anyactualCPNC[order(anyactualCPNC$Mes),]
anyactualLLAR<-anyactualLLAR[order(anyactualLLAR$Mes),]
anyactualCPE<-anyactualCPE[order(anyactualCPE$Mes),]
levels(anyactualNB$Mes)<-mesos
levels(anyactualCPNC$Mes)<-mesos #
levels(anyactualLLAR$Mes)<-mesos #
levels(anyactualCPE$Mes)<-mesos  #
#===========================================================#
#======== Pestanya 1 (B): INFORME (MESOS)===================#
#===========================================================#
#anyactualT<-rbind(anyactualNB, anyactualCPNC, anyactualLLAR, anyactualCPE) #levels(anyactualT$Mes)<-mesos # Eliminar després de canviar l'ordre
anyactualT<-rbind(anyactualCPNC, anyactualLLAR, anyactualNB, anyactualCPE)
anyactualT$Any<-NULL
#anyactualT$Mes<-as.factor(anyactualT$Mes) # no cal pq ja és factor (ho ha de ser)
#levels(anyactualT$Mes)<-mesos
anyactualT$Prestació<-as.factor(anyactualT$Prestació)
levels(anyactualT$Prestació)<-c("CPE", "CPNC","Despeses llar","Necessitats bàs.")
#levels(anyactualT$Prestació)<-c("Compl. pensió estatal", "CPNC","Despeses de la llar","Necessitats bàsiques") # Ho forcem pq no hi hagi lio, potser no cal...
# Esperem que l'ordre sigui aquest i sigui vàlid
aa<-split(anyactualT, anyactualT$Mes)
for(i in 1:length(aa)){
bb<-as.data.frame(aa[[i]])
bb$Mes<-NULL
rownames(bb)<-bb[,"Prestació"]
bb$Prestació<-NULL
bb[,1:ncol(bb)]<-sapply(bb[,1:ncol(bb)], abs)
assign(names(aa[i]), bb)
}
rm(aa,bb,i)
#============================================================================================================================
# FALTA COMPLETAR GENER tot i que no hi puguem comprovar els errors d'altes i baixes, de fet els tenim
anyactualNB<-anyactualNB[match(mesos[1:nrow(anyactualNB)], anyactualNB$Mes),] #  Això en principi ha de fer que si es troba els mesos desordenats, els ordeni
anyactualCPNC<-anyactualCPNC[match(mesos[1:nrow(anyactualCPNC)], anyactualCPNC$Mes),]
anyactualLLAR<-anyactualLLAR[match(mesos[1:nrow(anyactualLLAR)], anyactualLLAR$Mes),]
anyactualCPE<-anyactualCPE[match(mesos[1:nrow(anyactualCPE)], anyactualCPE$Mes),]
## Completem el resta de mesos que no hi són per 0
anyactualNB[1:12,"Mes"]<-mesos
row.names(anyactualNB)<-mesos
anyactualNB[,"Mes"]<-NULL
anyactualNB$Any<-NULL
anyactualCPNC[1:12,"Mes"]<-mesos
row.names(anyactualCPNC)<-mesos
anyactualCPNC[,"Mes"]<-NULL
anyactualCPNC$Any<-NULL
anyactualLLAR[1:12,"Mes"]<-mesos
row.names(anyactualLLAR)<-mesos
anyactualLLAR[,"Mes"]<-NULL
anyactualLLAR$Any<-NULL
anyactualCPE[1:12,"Mes"]<-mesos
row.names(anyactualCPE)<-mesos
anyactualCPE[,"Mes"]<-NULL
anyactualCPE$Any<-NULL
i<-1
while(i<=12){
if(is.na(anyactualNB[i,1]) & is.na(anyactualCPNC[i,1]) & is.na(anyactualLLAR[i,1]) & is.na(anyactualNB[i,2])){
anyactualNB[mesos[i],]<-rep(0, ncol(anyactualNB))
anyactualCPNC[mesos[i],]<-rep(0, ncol(anyactualCPNC))
anyactualLLAR[mesos[i],]<-rep(0, ncol(anyactualLLAR))
anyactualCPE[mesos[i],]<-rep(0, ncol(anyactualCPE))
}
i<-i+1
}
rm(i)
anyactualNB$Prestació<-NULL # (si necessitéssim la prestació de cada ja mirem de posar-ho)
anyactualCPNC$Prestació<-NULL
anyactualLLAR$Prestació<-NULL
anyactualCPE$Prestació<-NULL
# Tenim les taules de l'any actual de les diferents prestacions!!!
anyactualNB[,1:ncol(anyactualNB)]<-sapply(anyactualNB[,1:ncol(anyactualNB)], abs)
anyactualCPNC[,1:ncol(anyactualCPNC)]<-sapply(anyactualCPNC[,1:ncol(anyactualCPNC)], abs)
anyactualLLAR[,1:ncol(anyactualLLAR)]<-sapply(anyactualLLAR[,1:ncol(anyactualLLAR)], abs)
anyactualCPE[,1:ncol(anyactualCPE)]<-sapply(anyactualCPE[,1:ncol(anyactualCPE)], abs)
#=================== GUARDEM ======== (potser això ho podrem posar en un apartat al final de tot i guardar-ho tot seguit)=====
# Guardem les taules d'imports separades per províncies
separar<-function(anyact, nom){
setwd(paste0(path_project, "scripts/Informe(a) Prestacions/"))
#write.csv(anyact[,c(1:9)],paste0(nom, "_TOTAL.csv"), fileEncoding="utf8")
# -------------------- PROVISIONAL: -----------------------------------------------------#
# De moment imprimim també "Import total" (verificar correcció de dades des de la web)
names(anyact)<-c("Beneficiaris",    "Imp. total (quadrament)",    "Ordinària",       "No ordinària",    "Endarr. totals",  "Deduccions",      "Altes Totals",
"Rehabilitacions", "Baixes Totals",   "Benef. BCN",      "Import BCN",      "Ord. BCN",        "No ord. BCN",     "Endarr BCN",
"Deduccions BCN",  "Altes BCN" ,      "Rehab. BCN",      "Baixes BCN",      "Benef. GIR",      "Import GIR",      "Ord. GIR",
"No ord. GIR",     "Endarr GIR",      "Deduccions GIR",  "Altes GIR",       "Rehab. GIR",      "Baixes GIR",      "Benef. LLEI",
"Import LLEI",     "Ord. LLEI" ,      "No ord. LLEI",    "Endarr LLEI" ,    "Deduccions LLEI", "Altes LLEI",      "Rehab. LLEI",
"Baixes LLEI",     "Benef. TGN",      "Import TGN",      "Ord. TGN"  ,      "No ord. TGN",     "Endarr TGN",      "Deduccions TGN",
"Altes TGN",       "Rehab. TGN",      "Baixes TGN",      "Total imp (informat nòmines)")
write.csv(anyact[,c(1:9,46)],paste0(nom, "_TOTAL.csv"), fileEncoding="utf8")
# ---------------------------------------------------------------------------------------#
write.csv(anyact[,c(10:18)],paste0(nom, "_BCN.csv"), fileEncoding="utf8")
write.csv(anyact[,c(19:27)],paste0(nom, "_GIR.csv"), fileEncoding="utf8")
write.csv(anyact[,c(28:36)],paste0(nom, "_LLEI.csv"), fileEncoding="utf8")
write.csv(anyact[,c(37:45)],paste0(nom, "_TGN.csv"), fileEncoding="utf8")
}
separar(anyactualNB, "NB")
separar(anyactualLLAR, "LLAR")
separar(anyactualCPNC, "CPNC")
separar(anyactualCPE, "CPE")
rm(anyactualCPE, anyactualCPNC, anyactualLLAR, anyactualNB, anyactualT)
# Guardem taules dels mesos (amb desglossament per demarcació) - per si els volguessin desglossats, però diu la Nieves que no cal
# setwd(paste0(path_project, "scripts/Informe(b) mes/"))
# write.csv(gener,"Gener_D.csv", fileEncoding="utf8")
# write.csv(febrer,"Febrer_D.csv", fileEncoding="utf8")
# write.csv(març,"Mar_D.csv", fileEncoding="utf8")
# write.csv(abril,"Abril_D.csv", fileEncoding="utf8")
# write.csv(maig,"Maig_D.csv", fileEncoding="utf8")
# write.csv(juny,"Juny_D.csv", fileEncoding="utf8")
# write.csv(juliol,"Juliol_D.csv", fileEncoding="utf8")
# write.csv(agost,"Agost_D.csv", fileEncoding="utf8")
# write.csv(setembre,"Setembre_D.csv", fileEncoding="utf8")
# write.csv(octubre,"Octubre_D.csv", fileEncoding="utf8")
# write.csv(novembre,"Novembre_D.csv", fileEncoding="utf8")
# write.csv(desembre,"Desembre_D.csv", fileEncoding="utf8")
# Guardem taules dels mesos (només totals, sense desglossament per demarcació)
setwd(paste0(path_project, "scripts/Informe(b) mes/"))
write.csv(gener[,c(1:9)],"Gener.csv", fileEncoding="utf8")
write.csv(febrer[,c(1:9)],"Febrer.csv", fileEncoding="utf8")
write.csv(març[,c(1:9)],"Mar.csv", fileEncoding="utf8")
write.csv(abril[,c(1:9)],"Abril.csv", fileEncoding="utf8")
write.csv(maig[,c(1:9)],"Maig.csv", fileEncoding="utf8")
write.csv(juny[,c(1:9)],"Juny.csv", fileEncoding="utf8")
write.csv(juliol[,c(1:9)],"Juliol.csv", fileEncoding="utf8")
write.csv(agost[,c(1:9)],"Agost.csv", fileEncoding="utf8")
write.csv(setembre[,c(1:9)],"Setembre.csv", fileEncoding="utf8")
write.csv(octubre[,c(1:9)],"Octubre.csv", fileEncoding="utf8")
write.csv(novembre[,c(1:9)],"Novembre.csv", fileEncoding="utf8")
write.csv(desembre[,c(1:9)],"Desembre.csv", fileEncoding="utf8")
#=============================================================================================================================#
# =================================== FINS AQUÍ TOT OK
#===========================================================#
#======== Pestanya 2 (A): RESUM ANY ACTUAL =================#
#===========================================================#
# ALS HISTÒRICS DE LES PRESTACIONS JA S'HAN GUARDAT LES DADES DEL MES ACTUAL
#==> AGAFAR ANYACTUAL I COMPLETAR AMB ZEROS
PCPNC<-historiccpnc[historiccpnc$Any==aquestany, c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions", #"Total import",
"Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals", "Mes")]
PLLAR<-historicllar[historicllar$Any==aquestany, c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions", #"Total import",
"Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals", "Mes")]
PNB<-historicnecBas[historicnecBas$Any==aquestany, c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions", #"Total import",
"Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals", "Mes")]
PCPE<-historiccpe[historiccpe$Any==aquestany, c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions", # "Total import",
"Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals", "Mes")]
PCPNC[,"Import mig (e/u)"]<-round((PCPNC$`Import total`)/(PCPNC$Beneficiaris), digits=2)
PLLAR[,"Import mig (e/u)"]<-round((PLLAR$`Import total`)/(PLLAR$Beneficiaris), digits=2)
PNB[,"Import mig (e/u)"]<-round((PNB$`Import total`)/(PNB$Beneficiaris), digits=2)
PCPE[,"Import mig (e/u)"]<-round((PCPE$`Import total`)/(PCPE$Beneficiaris), digits=2)
# ======= TOTALP IMPORTS
TotalP_imp<-cbind(PCPNC[,c("Mes","Import total","Beneficiaris","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions")],
PLLAR[,c("Import total","Beneficiaris","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions")],
PNB[,c("Import total","Beneficiaris","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions")],
PCPE[,c("Import total","Beneficiaris","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions")] # , "Total import" # ?
)
names(TotalP_imp)<-c("Mes","Import","Prestacions","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions",
"Import","Prestacions","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions",
"Import","Prestacions","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions",
"Import","Prestacions","Import mig (e/u)","Ordinària","No ordinària","Endarr. totals","Deduccions"
)
# Ordenem i Completem totalP amb zeros
TotalP_imp<-TotalP_imp[match(mesos[1:nrow(TotalP_imp)], TotalP_imp$Mes),]
TotalP_imp[1:12,"Mes"]<-mesos
row.names(TotalP_imp)<-mesos
TotalP_imp[,"Mes"]<-NULL
# Última fila: TOTALS (pels imports fem sumes)
# Mitjanes totals i prestacions: fem mitjana de tots els mesos
TotalP_imp["Total",c(2,3,9,10,16,17,23,24)]<-apply(TotalP_imp[,c(2,3,9,10,16,17,23,24)], 2, mean, na.rm=TRUE)
# Imports totals: fem la suma per tots els anys
TotalP_imp["Total",c(1,4:8,11:15,18:22,25:28)]<-apply(TotalP_imp[,c(1,4:8,11:15,18:22,25:28)], 2, sum, na.rm=TRUE)
i<-1
while(i<=12){
if(is.na(TotalP_imp[i,1]) & is.na(TotalP_imp[i,8]) & is.na(TotalP_imp[i,15])){
TotalP_imp[mesos[i],]<-rep(0, ncol(TotalP_imp))
}
i<-i+1
}
rm(i)
# ======= TOTALP BENEFICIARIS
# AFEGir: TEMPS MIG  ALTES / TEMPS MIG BAIXES
TotalP_benef<-cbind(PCPNC[,c("Mes","Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals")],
PLLAR[,c("Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals")],
PNB[,c("Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals")],
PCPE[,c("Beneficiaris", "Altes Totals", "Rehabilitacions", "Baixes Totals")])
names(TotalP_benef)<-c("Mes","Beneficiaris", "Altes", "Rehabilitacions", "Baixes",
"Beneficiaris", "Altes", "Rehabilitacions", "Baixes",
"Beneficiaris", "Altes", "Rehabilitacions", "Baixes",
"Beneficiaris", "Altes", "Rehabilitacions", "Baixes")
TotalP_benef<-TotalP_benef[match(mesos[1:nrow(TotalP_benef)], TotalP_benef$Mes),]
TotalP_benef[1:12,"Mes"]<-mesos
row.names(TotalP_benef)<-mesos
TotalP_benef[,"Mes"]<-NULL
### TotalP_benef["Mitjana",c(1:12)]<-apply(TotalP_benef[,c(1:12)], 2, mean, na.rm=TRUE) # TINC PROBLEMA AMB LES DADES QUE VÉNEN DE CPE, QUE NO LES SUMA NI TRACTA
TotalP_benef["Total",c(1,5,9,13)]<-apply(TotalP_benef[,c(1,5,9,13)], 2, mean, na.rm=TRUE)
TotalP_benef["Total",c(2:4,6:8,10:12,14:16)]<-apply(TotalP_benef[,c(2:4,6:8,10:12,14:16)], 2, sum, na.rm=TRUE)
i<-1
while(i<=12){
if(is.na(TotalP_benef[i,1]) & is.na(TotalP_benef[i,5]) & is.na(TotalP_benef[i,9]) & is.na(TotalP_benef[i,13])){
TotalP_benef[mesos[i],]<-rep(0, ncol(TotalP_benef))
}
i<-i+1
}
rm(i)
TotalP_imp[,1:ncol(TotalP_imp)]<-sapply(TotalP_imp[,1:ncol(TotalP_imp)], abs)
# Guardem TotalP:
nom_imp<-paste0("TotalP_imports ", aquestany, ".csv")
nom_ben<-paste0("TotalP_benef ", aquestany, ".csv")
setwd(paste0(path_project, "scripts/Resum/"))
write.csv(TotalP_imp,"TotalP_imports.csv", fileEncoding="utf8")
write.csv(TotalP_benef,"TotalP_benef.csv", fileEncoding="utf8")
write.csv(TotalP_imp,nom_imp, fileEncoding="utf8") # Guardem les taules de l'any actual amb el nom de l'any per posar-ho a la pestanya 2b).
write.csv(TotalP_benef,nom_ben, fileEncoding="utf8")
rm(nom_imp, nom_ben, TotalP_imp, TotalP_benef)
#===========================================================#
#====== Pestanya 2 (B): RESUM DE TOTS ELS ANYS  ============#
#===========================================================#
# Actualitzem històric_anys amb les noves dades del mes actual
historic_anys[paste(aquestany, "cpnc", sep=" "),]<-c(aquestany, apply(historiccpnc[historiccpnc$Any==aquestany,c(1:45)], 2, sum, na.rm=TRUE),"cpnc")
historic_anys[paste(aquestany, "llar", sep=" "),]<-c(aquestany, apply(historicllar[historicllar$Any==aquestany,c(1:45)], 2, sum, na.rm=TRUE),"llar")
historic_anys[paste(aquestany, "nb", sep=" "),]<-c(aquestany, apply(historicnecBas[historicnecBas$Any==aquestany,c(1:45)], 2, sum, na.rm=TRUE),"nb")
historic_anys[paste(aquestany, "cpe", sep=" "),]<-c(aquestany, apply(historiccpe[historiccpe$Any==aquestany,c(1:45)], 2, sum, na.rm=TRUE),"cpe")
# Resum de tots els anys ======================= (Posem que ens agafi cada vegada els últims 5 anys)
Anys_CPNC<-historic_anys[historic_anys$Prestcurt=="cpnc" & historic_anys$Any>=as.numeric(aquestany)-4,]
Anys_LLAR<-historic_anys[historic_anys$Prestcurt=="llar" & historic_anys$Any>=as.numeric(aquestany)-4,]
Anys_NB<-historic_anys[historic_anys$Prestcurt=="nb" & historic_anys$Any>=as.numeric(aquestany)-4,]
Anys_CPE<-historic_anys[historic_anys$Prestcurt=="cpe" & historic_anys$Any>=as.numeric(aquestany)-4,]
Resumanys_imp<-cbind(Anys_CPNC[,c("Any", "Import total","Ordinària","No ordinària","Endarr. totals","Deduccions")],
Anys_LLAR[,c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions")],
Anys_NB[,c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions")],
Anys_CPE[,c("Import total","Ordinària","No ordinària","Endarr. totals","Deduccions")])
Resumanys_ben<-cbind(Anys_CPNC[,c("Any", "Beneficiaris","Altes Totals","Rehabilitacions","Baixes Totals")],
Anys_LLAR[,c("Beneficiaris","Altes Totals","Rehabilitacions","Baixes Totals")],
Anys_NB[,c("Beneficiaris","Altes Totals","Rehabilitacions","Baixes Totals")],
Anys_CPE[,c("Beneficiaris","Altes Totals","Rehabilitacions","Baixes Totals")])
# Veure "Taula Total dels anys" a R gestió (L.1084)
# Aggregate de l'històric per anys (sum/mean). * Podem fer les sumes per cada prestació i després cbind.
# (a Rgestió vam fer: GTotalP / GResum / GBAM)
rownames(Resumanys_imp)<-Resumanys_imp$Any
rownames(Resumanys_ben)<-Resumanys_ben$Any
Resumanys_imp$Any<-NULL
Resumanys_ben$Any<-NULL
Resumanys_imp[,1:ncol(Resumanys_imp)]<-sapply(Resumanys_imp[,1:ncol(Resumanys_imp)], as.numeric)
Resumanys_imp[,1:ncol(Resumanys_imp)]<-sapply(Resumanys_imp[,1:ncol(Resumanys_imp)], abs)
Resumanys_imp[,1:ncol(Resumanys_imp)]<-sapply(Resumanys_imp[,1:ncol(Resumanys_imp)], round, digits=2)
setwd(paste0(path_project, "scripts/Resum/"))
write.csv(Resumanys_imp, "Resum anys_imp.csv", fileEncoding="utf8")
write.csv(Resumanys_ben, "Resum anys_ben.csv", fileEncoding="utf8")
# ==========================================================================================================
# netejar Global Environment
rm(Resumanys_ben, Resumanys_imp)
#rm(Anys_CPE, Anys_CPNC, Anys_LLAR, Anys_NB)
rm(gener, febrer, març, abril, maig, juny, juliol, agost, setembre, octubre, novembre, desembre)
rm(provin_ellsCPE, provin_ellsCPNC, provin_ellsLLAR, provin_ellsNB)
rm(PCPNC, PLLAR, PCPE, PNB)
rm(separar, totes2) # dembaixes, quad
#======================================================================================#
#===================== NOU QUADRE DEUTES: TOTES LES PRESTACIONS =======================#
#============================ DEUTES GENERATS PER BAIXES ==============================#
#======================================================================================#
# HA DE GUARDAR DEUTES A L'HISTÒRIC - ALMENYS PER L'ANY ACTUAL  - FINS AL MES SEGÜENT!!!!!!
# DEUTES VE DE L'HISTÒRIC *******
historic_baixes2<-historic_baixes
# Deutes: agafem els de l'any actual
# deutes_act<-deutes[deutes$any==aquestany,]
# Deutes retornats i deutes generats =================================================#
if(paste0("DEUTESPEND ", avui-0.01) %in% colnames(historic_baixes2)){
retornats<-historic_baixes2[historic_baixes2[,paste0("DEUTESPEND ", avui-0.01)]!=0 & is.na(historic_baixes2[,paste0("DEUTESPEND ", avui-0.01)])==FALSE &
is.na(historic_baixes2[,paste0("DEUTESPEND ", avui)])==FALSE,]
retornats[,"Deutes retornats"]<-retornats[,paste0("DEUTESPEND ", avui)]-retornats[,paste0("DEUTESPEND ", avui-0.01)]
deutes[mesany, "Deute retornat"]<-sum(retornats$`Deutes retornats`, na.rm=TRUE)
generats<-historic_baixes2[(is.na(historic_baixes2[,paste0("DEUTESPEND ", avui-0.01)])==TRUE |
historic_baixes2[,paste0("DEUTESPEND ", avui-0.01)]==0) & (is.na(historic_baixes2[,paste0("DEUTESPEND ", avui)])==FALSE &
historic_baixes2[,paste0("DEUTESPEND ", avui)]!=0),]
deutes[mesany, "Deute generat"]<-sum(as.numeric(generats[,paste0("DEUTESPEND ", avui)]), na.rm=TRUE)
# deutes[mesany, "Retornat - generat"]<-deutes[mesany, "Deute retornat"]+deutes[mesany, "Deute generat"]
deutes[mesany, "Retornat - generat"]<-sum(deutes[mesany, "Deute retornat"],deutes[mesany, "Deute generat"], na.rm = TRUE)
rm(retornats, generats)
}else{ # (Primer mes de tots; no info del mes anterior)
deutes[mesany, "Deute retornat"]<-NA # Gener puc saber el deute generat però no el retornat... No posaré info de deute acumulat pq hi faltaria restar la part del retornat (començarà al 2n mes)
deutes[mesany, "Deute generat"]<-sum(as.numeric(historic_baixes2[,paste0("DEUTESPEND ", avui)]), na.rm=TRUE)
deutes[mesany, "Retornat - generat"]<-sum(deutes[mesany, "Deute retornat"],deutes[mesany, "Deute generat"], na.rm=TRUE)
}
# Deute acumulat
if(nrow(deutes)==1){
deutes[mesany, "Deute acumulat"]<-deutes[mesany, "Retornat - generat"] # Deute acumulat començarà a comptar des de la data en què tinguem els fitxers
}else{
deutes[mesany, "Deute acumulat"]<-sum(deutes[mesany, "Retornat - generat"], deutes[as.character(avui-0.01), "Deute acumulat"], na.rm=TRUE)
}
# Deutes activats per Vies de Constrenyiment
deutes[mesany, "Deutes activats VC"]<-sum(baixesTotes_mesact[,paste0("DEUTESVC ", avui)], na.rm=TRUE) # suma només les del mes actual!! :)
# rm(baixesTotes_mesact)
deutes[mesany,"Any"]<-aquestany
deutes[mesany,"Mes"]<-mesact
# Agafem la taula de l'any i completem amb zeros
deutesany<-deutes[deutes$Any==aquestany,]
deutesany$Any<-NULL
deutesany<-deutesany[match(mesos[1:nrow(deutesany)], deutesany$Mes),]
deutesany[1:12,"Mes"]<-mesos
row.names(deutesany)<-mesos
deutesany[,"Mes"]<-NULL
### deutesany["Mitjana",c(1:12)]<-apply(deutesany[,c(1:12)], 2, mean, na.rm=TRUE) # TINC PROBLEMA AMB LES DADES QUE VÉNEN DE CPE, QUE NO LES SUMA NI TRACTA
deutesany["Total",c(1:3,5)]<-apply(deutesany[,c(1:3,5)], 2, sum, na.rm=TRUE)
deutesany["Total",4]<-deutesany[mesact,4] # El de l'última fila diferent de NA (mes actual)
i<-1
while(i<=12){
if(is.na(deutesany[i,1]) & is.na(deutesany[i,2]) & is.na(deutesany[i,3]) & is.na(deutesany[i,5])){
deutesany[mesos[i],]<-rep(0, ncol(deutesany))
}
i<-i+1
}
rm(i)
# DEUTES es guarda per a l'històric
# Guardem deutesany per imprimir a la pestanya "Resum" del web:
nom_deut<-paste0("Deutes ", aquestany, ".csv")
setwd(paste0(path_project, "scripts/Resum/"))
write.csv(deutesany,"Deutes.csv", fileEncoding="utf8")
write.csv(deutesany,nom_deut, fileEncoding="utf8") # Guardem les taules de l'any actual amb el nom de l'any per posar-ho a la pestanya 2b).
deutesany
deutesany
as.numeric(aquestany)==row.names(historic_deutes)[5]
deutesany
hisotric_deutes
historic_deutes
hisotric_deutes$Any<-NULL
historic_deutes$Any<-NULL
aquestany
deutesany
colSums(deutesany)
colSums(deutesany,na.rm=T)
historic_deutes[aquestany,]
dd<-historic_deutes
dd[2019,]<-colSUms(deutesany,na.rm=T)
dd[2019,]<-colSums(deutesany,na.rm=T)
dd
dd["2019",]<-colSums(deutesany,na.rm=T)
dd
dd<-historic_deutes
dd
dd["2019",]<-colSums(deutesany,na.rm=T)
dd
aquestany
as.numeric(aquestany)==row.names(historic_deutes)[nrow(historic_deutes)]
historic_deutes[historic_deutes$Any>=as.numeric(aquestany)-4,]
historic_deutes$Any<-row.names(historic_deutes)
historic_deutes[historic_deutes$Any>=as.numeric(aquestany)-4,]
load("historic0.RData")
setwd("C:/xampp/htdocs/Llei_13/Llei_13.git")
load("historic0.RData")
ls()
a
setwd("C:/xampp/htdocs/Llei_13/Llei_13.git")
load("historic0.RData")
ls()
read.table("historic_deutes.csv",header=T,sep=",")
read.table("historic_deutes.csv",header=T,sep=",")
names(deutes)
head(deutes)
#
load("historic13b.Rdata")
load("historic0.RData")
load("historic13b.Rdata")
names(deutes)
historic_deutes<-read.table("historic_deutes.csv",header=T,sep=",")
names(historic_deutes)[1:5]<-names(deutes)
names(historic_deutes)[1:5]
names(deutes)
names(historic_deutes)[1:5]<-names(deutes)[1:5]
historic_deutes<-read.table("historic_deutes.csv",header=T,sep=",")
names(historic_deutes)<-names(deutes)[1:5]
historic_deutes
historic_deutes<-read.table("historic_deutes.csv",header=T,sep=",")
View(historic_deutes)
historic_deutes<-read.table("historic_deutes.csv",header=T,sep=",")
row.names(historic_deutes)<-historic_deutes[,1]
historic_deutes[,1]<-NULL
names(historic_deutes)<-names(deutes)[1:5]
historic_deutes
rm(list=setdiff(ls(), c("codis","comarques","demarcacions","historic_anys","haz.cero.na",#"mesos",
"historiccpnc","historiccpe","historicllar","historicnecBas","path_R","historic_altes","historic_end","historic_rehab",
"historic_noord","historic_baixes","Resum_motiusNB", "Resum_motiusCPNC","Resum_motiusCPE","Resum_motiusLLAR", "deutes",
"historic_actives","historic_deutes" )))
setwd("C:/xampp/htdocs/Llei_13/Llei_13.git")
save.image("historic0.RData")
deutes_anys<-read.table("deutes_anys.csv",header=T,sep=",")
row.names(deutes_anys)<-deutes_anys[,1]
deutes_anys[,1]<-NULL
names(deutes_anys)<-names(deutes)[1:5]
rm(list=setdiff(ls(), c("codis","comarques","demarcacions","historic_anys","haz.cero.na",#"mesos",
"historiccpnc","historiccpe","historicllar","historicnecBas","path_R","historic_altes","historic_end","historic_rehab",
"historic_noord","historic_baixes","Resum_motiusNB", "Resum_motiusCPNC","Resum_motiusCPE","Resum_motiusLLAR", "deutes",
"historic_actives","deutes_anys" )))
setwd("C:/xampp/htdocs/Llei_13/Llei_13.git")
save.image("historic0.RData")
deutes_anys<-read.table("historic_deutes.csv",header=T,sep=",")
row.names(deutes_anys)<-deutes_anys[,1]
deutes_anys[,1]<-NULL
names(deutes_anys)<-names(deutes)[1:5]
rm(list=setdiff(ls(), c("codis","comarques","demarcacions","historic_anys","haz.cero.na",#"mesos",
"historiccpnc","historiccpe","historicllar","historicnecBas","path_R","historic_altes","historic_end","historic_rehab",
"historic_noord","historic_baixes","Resum_motiusNB", "Resum_motiusCPNC","Resum_motiusCPE","Resum_motiusLLAR", "deutes",
"historic_actives","deutes_anys" )))
setwd("C:/xampp/htdocs/Llei_13/Llei_13.git")
save.image("historic0.RData")
sewd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
read.csv2("historic.csv",header=T,sep=",")
