quadrament<-as.data.frame(read_excel("Quadrament.xlsx", sheet=1, na=""))
#DCR<-as.data.frame(read_excel("DCR.xls", sheet=1, na=""))
historic_baixes<- as.data.frame(read_excel("Baixes.xlsx", sheet=1, na=""))
setwd("C:/xampp/htdocs/GestioDeute/scripts")
load("historic.RData")
# args <- commandArgs(TRUE)
#N<-as.yearmon(args, "%Y-%m")
mes<-c("Gener","Febrer","Mar","Abril","Maig","Juny","Juliol","Agost","Setembre","Octubre","Novembre","Desembre")
N<-as.yearmon("02-2017","%m-%Y")
avui<-N
gen2017<-as.yearmon("01-2017","%m-%Y")
## Guardem el mes de quadrament en què estem
nomquadrament<-paste("Quadrament ",avui, ".csv",sep="")
#setwd("C:/Users/agrenzne/Documents/Gestió deute/Quasi definitiu/Quadraments")
setwd("C:/xampp/htdocs/GestioDeute/scripts/quadraments")
write.csv(quadrament,nomquadrament, fileEncoding="utf8")
nomquadrament<-paste("Quadrament ",avui-0.01, ".csv",sep="")
N<-as.yearmon("09-2018","%m-%Y")
TotalP[TotalP$Any==N,]
N<-as.yearmon("09-2018","%m-%Y")
TotalP[TotalP$Any==N,c(2,7,13)]
TotalP[TotalP$Any==2018,c(2,7,13)]
levels(TotalP$Any)
names(TotalP$Any)
labels(TotalP$Any)
summary(TotalP$Any)
(TotalP$Any)
(TotalP$Any)==2018
wich((TotalP$Any)==2018)
wich((TotalP$Any)==ene 2018)
((TotalP$Any)==2018)
((TotalP$Any))
(TotalP$Any)=="ene. 2012"
n<-2013
(TotalP$Any)=="ene. n"
n<-"2013"
(TotalP$Any)=="ene. n"
n<-"2013"
(TotalP$Any)
n<-"2013"
(TotalP$Any)= "ene." n
n<-"2013"
(TotalP$Any)= c("ene." , n)
n<-"2013"
(TotalP$Any)= "ene. n"
(TotalP$Any)= "ene. 2013"
(TotalP$Any)== "ene. 2013"
(TotalP$Any)== "ene. n"
paste("ene.",n)
(TotalP$Any)== paste("ene.",n)
TotalP$ANy
TotalP$Any
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
paste("ene.",n)
n<-2013 #any
(TotalP$Any)== paste(mess,n)
TotalP[(TotalP$Any)== paste(mess[1],n)]
(TotalP$Any)== paste(mess[1],n)
TotalP[(TotalP$Any)== paste(mess[1],n),]
TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)]
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2013 #any
for( i in 1:length(mess)){
TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)]
}
n<-2013 #any
for( i in 1:length(mess)){
TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)]
}
n<-2013 #any
for( i in 1:(length(mess))){
TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)]
}
n<-2013 #any
for( i in 1:(length(mess))){
print(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
table(a,b,c)
table("a","b")
d<-data.frame()
d[1,]<-34
d
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[i,](TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
d
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[,i]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
d
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
d
(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])[1,]
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
print(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
d
d<-data.frame()
d[1,]<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
d
d<-data.frame(,header=F)
(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])[1,]
names((TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)]))
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
names(a)==NULL
a
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a[1,]
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
a
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[c(a,b),]
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
print(c(a,b))
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
#colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
#colnames(b)=NULL
print(c(a,b))
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
(c(a,b))
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
a
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
d[2,]<-b
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
d[2,]<-b
d
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
d
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
a
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,c(1:3)]<-a
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
d
d<-data.frame()
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
a
d<-data.frame(,ncol=3)
d<-data.frame(0,ncol=3)
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
a
d<-data.frame(0,ncol=3)
a<-(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
colnames(a)=NULL
b<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
colnames(b)=NULL
d[1,]<-a
a
a<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a
a<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a
a[2,]<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
a<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a[2,]<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
a
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
a<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
a[2,]<-(TotalP[(TotalP$Any)== paste(mess[2],n),c(2,7,13)])
a
d<-data.frame()
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])
}
View(d)
((TotalP$Any== paste(mess[10],n)))
((TotalP$Any== paste(mess[10],n))==FALSE)
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if{((TotalP$Any== paste(mess[i],n))==FALSE)}
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(((TotalP$Any== paste(mess[i],n))==FALSE))
else (d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)]))
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(((TotalP$Any== paste(mess[i],n))==FALSE)){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
length((TotalP$Any== paste(mess[10],n))==FALSE)
length((TotalP$Any== paste(mess[1],n))==FALSE)
((TotalP$Any== paste(mess[1],n))==FALSE)
((TotalP$Any== paste(mess[2],n))==FALSE)
((TotalP$Any== paste(mess[4],n))==FALSE)
((TotalP$Any== paste(mess[4],n))==TRUE)
((TotalP$Any== paste(mess[4],n)))
which((TotalP$Any== paste(mess[4],n)))==T
which((TotalP$Any== paste(mess[4],n)))==TRUE
(TotalP$Any== paste(mess[4],n))
(TotalP$Any== paste(mess[4],n))==TRUE
which(TotalP$Any== paste(mess[4],n))==TRUE
which(TotalP$Any== paste(mess[4],n))
which(TotalP$Any== paste(mess10],n))
which(TotalP$Any== paste(mess[10],n))
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(which(TotalP$Any== paste(mess[i],n))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
length(which(TotalP$Any== paste(mess[10],n)))
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n))==0)){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
length(which(TotalP$Any== paste(mess[10],n))
length(which(TotalP$Any== paste(mess[10],n)))
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2013 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2018 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2018 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2016 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2012 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
names(d)
rownames(d)
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2012 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
rownames(d)
d<-NULL
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2012 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2012 #any
#d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2017 #any
d<-data.frame()
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2013 #any
d<-data.frame()
for( i in 1:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2013 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2017 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2018 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
View(Resum)
View(provin)
View(imports_baixes)
View(historicPVN)
View(altes22)
View(Resum)
86317
50+74253+12014
View(historic)
View(historicPVN)
View(altes22)
setwd("C:\xampp\htdocs\GestioDeute\scripts\procediment")
mess<- c("ene.","feb.","mar.","abr.","may.","jun.","jul.","ago.","sep.","oct.","nov.","dic.")
n<-2016 #any
d<-data.frame(TotalP[(TotalP$Any)== paste(mess[1],n),c(2,7,13)])
for( i in 2:(length(mess))){
if(length(which(TotalP$Any== paste(mess[i],n)))==0){}
else {d[i,]<-(TotalP[(TotalP$Any)== paste(mess[i],n),c(2,7,13)])}
}
d
setwd("C:/xampp/htdocsGestioDeute/scripts/procediment")
setwd("C:/xampp/htdocsGestioDeute/scripts/procediment")
source("C:/xampp/htdocsGestioDeute/scripts/procediment")
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table(ADI,sep=",")
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table(ADI,sep=",",header=T)
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table("ADI.csv",sep=",",header=T)
head(ADI)
View(ADI)
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table("ADI.csv",sep=",",header=T)
ADS<-read.table("ADs.csv",sep=",",header=T)
AP<-read.table("AP.csv",sep=",",header=T)
ARP<-read.table("ARP.csv",sep=",",header=T)
CD<-read.table("CD.csv",sep=",",header=T)
PVS<-read.table("PVS.csv",sep=",",header=T)
VNP<-read.table("VNP.csv",sep=",",header=T)
head(ADI)
head(VNP)
head(ADS)
head(AP)
head(ARP)
head(CD)
head(PVS)
names(ADI)
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table("ADI.csv",sep=",",header=T)
names(ADI)[1]<-"ADI"
ADS<-read.table("ADs.csv",sep=",",header=T)
AP<-read.table("AP.csv",sep=",",header=T)
ARP<-read.table("ARP.csv",sep=",",header=T)
CD<-read.table("CD.csv",sep=",",header=T)
PVS<-read.table("PVS.csv",sep=",",header=T)
VNP<-read.table("VNP.csv",sep=",",header=T)
head(ADI)
setwd("C:/xampp/htdocs/GestioDeute/scripts/procediment")
ADI<-read.table("ADI.csv",sep=",",header=T)
names(ADI)[1]<-"ADI"
ADS<-read.table("ADS.csv",sep=",",header=T)
names(ADS)[1]<-"ADS"
AP<-read.table("AP.csv",sep=",",header=T)
names(AP)[1]<-"AP"
ARP<-read.table("ARP.csv",sep=",",header=T)
names(ARP)[1]<-"ARP"
CD<-read.table("CD.csv",sep=",",header=T)
names(CD)[1]<-"CD"
PVS<-read.table("PVS.csv",sep=",",header=T)
names(PVS)[1]<-"PVS"
VNP<-read.table("VNP.csv",sep=",",header=T)
names(VNP)[1]<-"VNP"
cbind(ADI,ADS,AP,ARP,CD,PVS,VNP)
tot<-cbind(ADI,ADS,AP,ARP,CD,PVS,VNP)
View(tot)
View(ARP)
names(PVS)
names(PVS)[-1]
head(PVS)[30]
head(PVS,30)
