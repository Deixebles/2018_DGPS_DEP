#
# if(nrow(modif)!=0){
#   mod$EXPEDIENT<-as.character(mod$EXPEDIENT)
#   mod$DNI<-as.character(mod$DNI)
#   modifRev1<-anti_join(modif[modif[,"Prestació"]==prest,c("EXPEDIENT", "DNI")], mod, by=c("EXPEDIENT", "DNI")) # Casos que ens surten a modif que no els surten a mod_ells
#   if(nrow(modifRev1)!=0){
#     modifRev1[,"Observació"]<-"canvia import - no surt a modif."
#     ERR_COINCID<-rbind(ERR_COINCID, modifRev1)
#   }
#   rm(modifRev1)
# }
#
# if(nrow(mod)!=0){
#   modif$EXPEDIENT<-as.character(modif$EXPEDIENT)
#   modif$DNI<-as.character(modif$DNI)
#   modifRev2<-anti_join(mod[,c("EXPEDIENT", "DNI")], modif, by= "DNI")
#   if(nrow(modifRev2)!=0){
#     modifRev2[,"Observació"]<-"surt a modif. fitxer nòmines - no reflectida entre quadraments"
#     ERR_COINCID<-rbind(ERR_COINCID, modifRev2)
#   }
#   rm(modifRev2)
# }
# ==========================================================================================
# ======================== GUARDEM ELS ERRORS EN CSV =======================================
# setwd(paste0(path_project, "scripts/Incongruències/"))
nom1<-paste0("ERR_COINCID_", prest, ".csv")
nom2<-paste0("ERR_REVISAR_", prest, ".csv")
write.csv(ERR_COINCID, nom1, fileEncoding="utf8")
write.csv(ERR_REVISAR, nom2, fileEncoding="utf8")
# ==========================================================================================
# TREURE: MODIFREVISAR - crec que no estan bé els imports de l'històric d'ordinàries
# nom3<-paste0("MOD_REVISAR_", prest, ".csv")
# write.csv(modifRevisar, nom3, fileEncoding="utf8")
# ------------------------------------------------------------------------------------------
# Si ja hem imprès en csv tot el que calia, ja no cal return ;)
# return(list(A=Altes, R=Rehab, B=Baixes)) # podem retornar una llista de les taules
}
if(exists("quadr01_CPNC")){
comparar0102(quadr01_CPNC, quadr02_CPNC, altes_ellsCPNC, baixes_ellsCPNC, endarr_ellsCPNC, rehab_ellsCPNC, modif_ellsCPNC, no_ordCPNC, "CPNC")
}else{
write.csv(data.frame(), "ERR_COINCID_CPNC.csv", fileEncoding="utf8")
write.csv(data.frame(), "ERR_REVISAR_CPNC.csv", fileEncoding="utf8")
write.csv(data.frame(), "MOD_REVISAR_CPNC.csv", fileEncoding="utf8")
}
if(exists("quadr01_LLAR")){
comparar0102(quadr01_LLAR, quadr02_LLAR, altes_ellsLLAR, baixes_ellsLLAR, endarr_ellsLLAR, rehab_ellsLLAR, modif_ellsLLAR, no_ordLLAR, "LLAR")
}else{
write.csv(data.frame(), "ERR_COINCID_LLAR.csv", fileEncoding="utf8")
write.csv(data.frame(), "ERR_REVISAR_LLAR.csv", fileEncoding="utf8")
write.csv(data.frame(), "MOD_REVISAR_LLAR.csv", fileEncoding="utf8")
}
if(exists("quadr01_NB")){
comparar0102(quadr01_NB, quadr02_NB, altes_ellsNB, baixes_ellsNB, endarr_ellsNB, rehab_ellsNB, modif_ellsNB, no_ordNB, "NB")
}else{
write.csv(data.frame(), "ERR_COINCID_NB.csv", fileEncoding="utf8")
write.csv(data.frame(), "ERR_REVISAR_NB.csv", fileEncoding="utf8")
write.csv(data.frame(), "MOD_REVISAR_NB.csv", fileEncoding="utf8")
}
if(exists("quadr01_CPE")){
comparar0102(quadr01_CPE, quadr02_CPE, altes_ellsCPE, baixes_ellsCPE, endarr_ellsCPE, rehab_ellsCPE, modif_ellsCPE, no_ordCPE, "CPE")
}else{
write.csv(data.frame(), "ERR_COINCID_CPE.csv", fileEncoding="utf8")
write.csv(data.frame(), "ERR_REVISAR_CPE.csv", fileEncoding="utf8")
write.csv(data.frame(), "MOD_REVISAR_CPE.csv", fileEncoding="utf8")
}
# E5. Error d'imports =================================================================#
# ===> TRAIEM COM A ERROR SI HI HA DISCREPÀNCIA ENTRE IMPORT CALCULAT D'ACTIVES I IMPORT DELS FITXERS NÒMINES
err_imports<-data.frame(Suma_import_actives = numeric(0), Import_fitxer_nòmines = numeric(0), Discrepància = numeric(0))
# CPNC
i_quadr_cpnc<-round(sum(quadr02_CPNC$IMPORT, na.rm=TRUE), digits = 2)
i_ells_cpnc<-round(historiccpnc[mesany,3]+historiccpnc[mesany,4]+historiccpnc[mesany, "Endarr. totals"]+historiccpnc[mesany, "Deduccions"], digits = 2)
if(abs(i_quadr_cpnc-i_ells_cpnc)/((i_quadr_cpnc+i_ells_cpnc)/2)*100 > 0.0001){
err_imports["Compl. PNC",]<-c(i_quadr_cpnc, i_ells_cpnc, round(abs((i_quadr_cpnc-i_ells_cpnc)/((i_quadr_cpnc+i_ells_cpnc)/2)*100), digits = 2))
}
# LLAR
i_quadr_llar<-round(sum(quadr02_LLAR$IMPORT, na.rm=TRUE), digits = 2)
i_ells_llar<-round(historicllar[mesany,3]+historicllar[mesany,4]+historicllar[mesany, "Endarr. totals"]+historicllar[mesany, "Deduccions"], digits = 2)
if(abs(i_quadr_llar-i_ells_llar)/((i_quadr_llar+i_ells_llar)/2)*100 > 0.0001){
err_imports["Despeses de la llar",]<-c(i_quadr_llar, i_ells_llar, round(abs((i_quadr_llar-i_ells_llar)/((i_quadr_llar+i_ells_llar)/2)*100), digits = 2))
}
# NB
i_quadr_nb<-round(sum(quadr02_NB$IMPORT, na.rm=TRUE), digits = 2)
i_ells_nb<-round(historicnecBas[mesany,3]+historicnecBas[mesany,4]+historicnecBas[mesany, "Endarr. totals"]+historicnecBas[mesany, "Deduccions"], digits = 2)
if(abs(i_quadr_nb-i_ells_nb)/((i_quadr_nb+i_ells_nb)/2)*100 > 0.0001){ #### err
err_imports["Necessitats bàsiques",]<-c(i_quadr_nb, i_ells_nb, round(abs((i_quadr_nb-i_ells_nb)/((i_quadr_nb+i_ells_nb)/2)*100), digits = 2))
}
# CPE
i_quadr_cpe<-round(sum(quadr02_CPE$IMPORT, na.rm=TRUE), digits = 2)
i_ells_cpe<-round(historiccpe[mesany,3]+historiccpe[mesany,4]+historiccpe[mesany, "Endarr. totals"]+historiccpe[mesany, "Deduccions"], digits = 2)
if(abs(i_quadr_cpe-i_ells_cpe)/((i_quadr_cpe+i_ells_cpe)/2)*100 > 0.0001){
err_imports["Compl. pensió estatal",]<-c(i_quadr_cpe, i_ells_cpe, round(abs((i_quadr_cpe-i_ells_cpe)/((i_quadr_cpe+i_ells_cpe)/2)*100), digits = 2))
}
names(err_imports)<-c("Import total actives", "Import total fitxer nòmines", "Discrepància (%)")
write.csv(err_imports, "Err_imports.csv", fileEncoding = "utf-8")
rm(i_quadr_cpnc, i_ells_cpnc, i_quadr_llar, i_ells_llar, i_quadr_nb, i_ells_nb, i_quadr_cpe, i_ells_cpe, err_imports)
#======================================================================================#
#====================== GRÀFICS I GUARDAR HISTÒRIC ====================================#
#======================================================================================#
# A - GRÀFICS ESTÀTICS =============================================
setwd(paste0(path_project, "scripts/graf/estatics"))
# estat civil / sexe
# A.1. Beneficiaris per prestació i per sexe (barres apilades)==============#
u_sexe<-data.frame()
u_sexe["CPNC","Dones"]<-nrow(quadr02_CPNC[quadr02_CPNC$SEXE=="D",])
u_sexe["CPNC","Homes"]<-nrow(quadr02_CPNC[quadr02_CPNC$SEXE=="H",])
u_sexe["Despeses de la llar","Dones"]<-nrow(quadr02_LLAR[quadr02_LLAR$SEXE=="D",])
u_sexe["Despeses de la llar","Homes"]<-nrow(quadr02_LLAR[quadr02_LLAR$SEXE=="H",])
u_sexe["Necessitats bas.","Dones"]<-nrow(quadr02_NB[quadr02_NB$SEXE=="D",])
u_sexe["Necessitats bas.","Homes"]<-nrow(quadr02_NB[quadr02_NB$SEXE=="H",])
u_sexe["CPE","Dones"]<-nrow(quadr02_CPE[quadr02_CPE$SEXE=="D",])
u_sexe["CPE","Homes"]<-nrow(quadr02_CPE[quadr02_CPE$SEXE=="H",])
write.csv(u_sexe,"A1b_benef_prest_sexe.csv",fileEncoding = "UTF-8")
# A.2. Beneficiaris per prestació i estat civil (barres apilades)===========#
u_estciv<-data.frame()
u_estciv["CPNC","Casat/da"]<-nrow(quadr02_CPNC[quadr02_CPNC$`ESTAT CIVIL`=="Casat/da",])
u_estciv["CPNC","Vidu/a"]<-nrow(quadr02_CPNC[quadr02_CPNC$`ESTAT CIVIL`=="Vidu/a",])
u_estciv["CPNC","Solter/a"]<-nrow(quadr02_CPNC[quadr02_CPNC$`ESTAT CIVIL`=="Solter/a",])
u_estciv["CPNC","Divorciat/da"]<-nrow(quadr02_CPNC[quadr02_CPNC$`ESTAT CIVIL`=="Divorciat/da",])
u_estciv["CPNC","Parella"]<-nrow(quadr02_CPNC[quadr02_CPNC$`ESTAT CIVIL`=="Parella",])
u_estciv["Despeses de la llar","Casat/da"]<-nrow(quadr02_LLAR[quadr02_LLAR$`ESTAT CIVIL`=="Casat/da",])
u_estciv["Despeses de la llar","Vidu/a"]<-nrow(quadr02_LLAR[quadr02_LLAR$`ESTAT CIVIL`=="Vidu/a",])
u_estciv["Despeses de la llar","Solter/a"]<-nrow(quadr02_LLAR[quadr02_LLAR$`ESTAT CIVIL`=="Solter/a",])
u_estciv["Despeses de la llar","Divorciat/da"]<-nrow(quadr02_LLAR[quadr02_LLAR$`ESTAT CIVIL`=="Divorciat/da",])
u_estciv["Despeses de la llar","Parella"]<-nrow(quadr02_LLAR[quadr02_LLAR$`ESTAT CIVIL`=="Parella",])
u_estciv["Necessitats bas.","Casat/da"]<-nrow(quadr02_NB[quadr02_NB$`ESTAT CIVIL`=="Casat/da",])
u_estciv["Necessitats bas.","Vidu/a"]<-nrow(quadr02_NB[quadr02_NB$`ESTAT CIVIL`=="Vidu/a",])
u_estciv["Necessitats bas.","Solter/a"]<-nrow(quadr02_NB[quadr02_NB$`ESTAT CIVIL`=="Solter/a",])
u_estciv["Necessitats bas.","Divorciat/da"]<-nrow(quadr02_NB[quadr02_NB$`ESTAT CIVIL`=="Divorciat/da",])
u_estciv["Necessitats bas.","Parella"]<-nrow(quadr02_NB[quadr02_NB$`ESTAT CIVIL`=="Parella",])
u_estciv["CPE","Casat/da"]<-nrow(quadr02_CPE[quadr02_CPE$`ESTAT CIVIL`=="Casat/da",])
u_estciv["CPE","Vidu/a"]<-nrow(quadr02_CPE[quadr02_CPE$`ESTAT CIVIL`=="Vidu/a",])
u_estciv["CPE","Solter/a"]<-nrow(quadr02_CPE[quadr02_CPE$`ESTAT CIVIL`=="Solter/a",])
u_estciv["CPE","Divorciat/da"]<-nrow(quadr02_CPE[quadr02_CPE$`ESTAT CIVIL`=="Divorciat/da",])
u_estciv["CPE","Parella"]<-nrow(quadr02_CPE[quadr02_CPE$`ESTAT CIVIL`=="Parella",])
write.csv(u_estciv,"A2b_benef_prest_estciv.csv",fileEncoding = "UTF-8")
# A.3. Beneficiaris per sexe (quesito) {usuaris quesito per sexe}===========#
# USUARIS TOTALS PER PRESTACIÓ O QUESITO HOMES-DONES TOTALS?
uq_prestacio<-data.frame()
uq_prestacio["CPNC","usuaris"]<-nrow(quadr02_CPNC)
uq_prestacio["Despeses de la llar","usuaris"]<-nrow(quadr02_LLAR)
uq_prestacio["Necessitats bas.","usuaris"]<-nrow(quadr02_NB)
uq_prestacio["CPE","usuaris"]<-nrow(quadr02_CPE)
uq_prestacio["CPNC","percentatge"]<-round(100*nrow(quadr02_CPNC)/sum(uq_prestacio$usuaris), digits = 2)
uq_prestacio["Despeses de la llar","percentatge"]<-round(100*nrow(quadr02_LLAR)/sum(uq_prestacio$usuaris), digits = 2)
uq_prestacio["Necessitats bas.","percentatge"]<-round(100*nrow(quadr02_NB)/sum(uq_prestacio$usuaris), digits = 2)
uq_prestacio["CPE","percentatge"]<-round(100*nrow(quadr02_CPE)/sum(uq_prestacio$usuaris), digits = 2)
write.csv(uq_prestacio,"A3p_uprestacio.csv",fileEncoding = "UTF-8")
# A.4. Homes - dones totals (totes les prestacions)=========================#
uq_sexe<-data.frame()
uq_sexe["Dones", "usuaris"]<-sum(u_sexe$Dones)
uq_sexe["Homes", "usuaris"]<-sum(u_sexe$Homes)
uq_sexe["Dones", "percentatge"]<-round(100*sum(u_sexe$Dones)/(sum(u_sexe$Dones)+sum(u_sexe$Homes)), digits=2)
uq_sexe["Homes", "percentatge"]<-round(100*sum(u_sexe$Homes)/(sum(u_sexe$Dones)+sum(u_sexe$Homes)), digits=2)
write.csv(uq_sexe,"A4p_usexe.csv",fileEncoding = "UTF-8")
rm(u_sexe, u_estciv,uq_prestacio, uq_sexe)
# A.5. Beneficiaris per demarcació - cada prest (quesito)===================#
# A5.1. Beneficiaris CPNC per província
u_demCPNC<-data.frame()
u_demCPNC["Barcelona","usuaris"]<-nrow(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Barcelona",])
u_demCPNC["Tarragona","usuaris"]<-nrow(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Tarragona",])
u_demCPNC["Girona","usuaris"]<-nrow(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Girona",])
u_demCPNC["Lleida","usuaris"]<-nrow(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Lleida",])
u_demCPNC["Barcelona","percentatge"]<-round(100*u_demCPNC["Barcelona","usuaris"]/sum(u_demCPNC$usuaris), digits = 2)
u_demCPNC["Tarragona","percentatge"]<-round(100*u_demCPNC["Tarragona","usuaris"]/sum(u_demCPNC$usuaris), digits = 2)
u_demCPNC["Girona","percentatge"]<-round(100*u_demCPNC["Girona","usuaris"]/sum(u_demCPNC$usuaris), digits = 2)
u_demCPNC["Lleida","percentatge"]<-round(100*u_demCPNC["Lleida","usuaris"]/sum(u_demCPNC$usuaris), digits = 2)
if(sum(u_demCPNC$usuaris)==0){u_demCPNC$percentatge<-0}
# A5.2. Beneficiaris LLAR per província
u_demLLAR<-data.frame()
u_demLLAR["Barcelona","usuaris"]<-nrow(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Barcelona",])
u_demLLAR["Tarragona","usuaris"]<-nrow(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Tarragona",])
u_demLLAR["Girona","usuaris"]<-nrow(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Girona",])
u_demLLAR["Lleida","usuaris"]<-nrow(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Lleida",])
u_demLLAR["Barcelona","percentatge"]<-round(100*u_demLLAR["Barcelona","usuaris"]/sum(u_demLLAR$usuaris), digits = 2)
u_demLLAR["Tarragona","percentatge"]<-round(100*u_demLLAR["Tarragona","usuaris"]/sum(u_demLLAR$usuaris), digits = 2)
u_demLLAR["Girona","percentatge"]<-round(100*u_demLLAR["Girona","usuaris"]/sum(u_demLLAR$usuaris), digits = 2)
u_demLLAR["Lleida","percentatge"]<-round(100*u_demLLAR["Lleida","usuaris"]/sum(u_demLLAR$usuaris), digits = 2)
if(sum(u_demLLAR$usuaris)==0){u_demLLAR$percentatge<-0}
# A5.3. Beneficiaris NB per província
u_demNB<-data.frame()
u_demNB["Barcelona","usuaris"]<-nrow(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Barcelona",])
u_demNB["Tarragona","usuaris"]<-nrow(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Tarragona",])
u_demNB["Girona","usuaris"]<-nrow(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Girona",])
u_demNB["Lleida","usuaris"]<-nrow(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Lleida",])
u_demNB["Barcelona","percentatge"]<-round(100*u_demNB["Barcelona","usuaris"]/sum(u_demNB$usuaris), digits = 2)
u_demNB["Tarragona","percentatge"]<-round(100*u_demNB["Tarragona","usuaris"]/sum(u_demNB$usuaris), digits = 2)
u_demNB["Girona","percentatge"]<-round(100*u_demNB["Girona","usuaris"]/sum(u_demNB$usuaris), digits = 2)
u_demNB["Lleida","percentatge"]<-round(100*u_demNB["Lleida","usuaris"]/sum(u_demNB$usuaris), digits = 2)
if(sum(u_demNB$usuaris)==0){u_demNB$percentatge<-0}
# A5.4. Beneficiaris CPE per província
u_demCPE<-data.frame()
u_demCPE["Barcelona","usuaris"]<-nrow(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Barcelona",])
u_demCPE["Tarragona","usuaris"]<-nrow(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Tarragona",])
u_demCPE["Girona","usuaris"]<-nrow(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Girona",])
u_demCPE["Lleida","usuaris"]<-nrow(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Lleida",])
u_demCPE["Barcelona","percentatge"]<-round(100*u_demCPE["Barcelona","usuaris"]/sum(u_demCPE$usuaris), digits = 2)
u_demCPE["Tarragona","percentatge"]<-round(100*u_demCPE["Tarragona","usuaris"]/sum(u_demCPE$usuaris), digits = 2)
u_demCPE["Girona","percentatge"]<-round(100*u_demCPE["Girona","usuaris"]/sum(u_demCPE$usuaris), digits = 2)
u_demCPE["Lleida","percentatge"]<-round(100*u_demCPE["Lleida","usuaris"]/sum(u_demCPE$usuaris), digits = 2)
if(sum(u_demCPE$usuaris)==0){u_demCPE$percentatge<-0}
#====================================================
# A.6. Imports per demarcació cada prest (quesito) =========================#   # (Import és l'import total)
# Import CPNC per província
i_demCPNC<-data.frame()
i_demCPNC["Barcelona","IMPORT"]<-sum(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Barcelona"& is.na(quadr02_CPNC$DEMARCACIÓ)==FALSE & is.na(quadr02_CPNC$IMPORT)==FALSE,"IMPORT"])
i_demCPNC["Tarragona","IMPORT"]<-sum(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Tarragona"& is.na(quadr02_CPNC$DEMARCACIÓ)==FALSE & is.na(quadr02_CPNC$IMPORT)==FALSE,"IMPORT"])
i_demCPNC["Girona","IMPORT"]<-sum(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Girona"& is.na(quadr02_CPNC$DEMARCACIÓ)==FALSE & is.na(quadr02_CPNC$IMPORT)==FALSE,"IMPORT"])
i_demCPNC["Lleida","IMPORT"]<-sum(quadr02_CPNC[quadr02_CPNC$DEMARCACIÓ=="Lleida"& is.na(quadr02_CPNC$DEMARCACIÓ)==FALSE & is.na(quadr02_CPNC$IMPORT)==FALSE,"IMPORT"])
i_demCPNC["Barcelona","percentatge"]<-round(100*i_demCPNC["Barcelona","IMPORT"]/sum(i_demCPNC$IMPORT), digits = 2)
i_demCPNC["Tarragona","percentatge"]<-round(100*i_demCPNC["Tarragona","IMPORT"]/sum(i_demCPNC$IMPORT), digits = 2)
i_demCPNC["Girona","percentatge"]<-round(100*i_demCPNC["Girona","IMPORT"]/sum(i_demCPNC$IMPORT), digits = 2)
i_demCPNC["Lleida","percentatge"]<-round(100*i_demCPNC["Lleida","IMPORT"]/sum(i_demCPNC$IMPORT), digits = 2)
if(sum(i_demCPNC$IMPORT, na.rm=TRUE)==0){i_demCPNC$percentatge<-0}
# Import LLAR per província
i_demLLAR<-data.frame()
i_demLLAR["Barcelona","IMPORT"]<-sum(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Barcelona"& is.na(quadr02_LLAR$DEMARCACIÓ)==FALSE & is.na(quadr02_LLAR$IMPORT)==FALSE,"IMPORT"])
i_demLLAR["Tarragona","IMPORT"]<-sum(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Tarragona"& is.na(quadr02_LLAR$DEMARCACIÓ)==FALSE & is.na(quadr02_LLAR$IMPORT)==FALSE,"IMPORT"])
i_demLLAR["Girona","IMPORT"]<-sum(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Girona"& is.na(quadr02_LLAR$DEMARCACIÓ)==FALSE & is.na(quadr02_LLAR$IMPORT)==FALSE,"IMPORT"])
i_demLLAR["Lleida","IMPORT"]<-sum(quadr02_LLAR[quadr02_LLAR$DEMARCACIÓ=="Lleida"& is.na(quadr02_LLAR$DEMARCACIÓ)==FALSE & is.na(quadr02_LLAR$IMPORT)==FALSE,"IMPORT"])
i_demLLAR["Barcelona","percentatge"]<-round(100*i_demLLAR["Barcelona","IMPORT"]/sum(i_demLLAR$IMPORT), digits = 2)
i_demLLAR["Tarragona","percentatge"]<-round(100*i_demLLAR["Tarragona","IMPORT"]/sum(i_demLLAR$IMPORT), digits = 2)
i_demLLAR["Girona","percentatge"]<-round(100*i_demLLAR["Girona","IMPORT"]/sum(i_demLLAR$IMPORT), digits = 2)
i_demLLAR["Lleida","percentatge"]<-round(100*i_demLLAR["Lleida","IMPORT"]/sum(i_demLLAR$IMPORT), digits = 2)
if(sum(i_demLLAR$IMPORT, na.rm=TRUE)==0){i_demLLAR$percentatge<-0}
# Import NB per província
i_demNB<-data.frame()
i_demNB["Barcelona","IMPORT"]<-sum(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Barcelona" & is.na(quadr02_NB$DEMARCACIÓ)==FALSE & is.na(quadr02_NB$IMPORT)==FALSE,"IMPORT"])
i_demNB["Tarragona","IMPORT"]<-sum(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Tarragona"& is.na(quadr02_NB$DEMARCACIÓ)==FALSE & is.na(quadr02_NB$IMPORT)==FALSE,"IMPORT"])
i_demNB["Girona","IMPORT"]<-sum(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Girona"& is.na(quadr02_NB$DEMARCACIÓ)==FALSE & is.na(quadr02_NB$IMPORT)==FALSE,"IMPORT"])
i_demNB["Lleida","IMPORT"]<-sum(quadr02_NB[quadr02_NB$DEMARCACIÓ=="Lleida"& is.na(quadr02_NB$DEMARCACIÓ)==FALSE & is.na(quadr02_NB$IMPORT)==FALSE,"IMPORT"])
i_demNB["Barcelona","percentatge"]<-round(100*i_demNB["Barcelona","IMPORT"]/sum(i_demNB$IMPORT), digits = 2)
i_demNB["Tarragona","percentatge"]<-round(100*i_demNB["Tarragona","IMPORT"]/sum(i_demNB$IMPORT), digits = 2)
i_demNB["Girona","percentatge"]<-round(100*i_demNB["Girona","IMPORT"]/sum(i_demNB$IMPORT), digits = 2)
i_demNB["Lleida","percentatge"]<-round(100*i_demNB["Lleida","IMPORT"]/sum(i_demNB$IMPORT), digits = 2)
if(sum(i_demNB$IMPORT, na.rm=TRUE)==0){i_demNB$percentatge<-0}
# Import CPE per província
i_demCPE<-data.frame()
i_demCPE["Barcelona","IMPORT"]<-sum(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Barcelona"& is.na(quadr02_CPE$DEMARCACIÓ)==FALSE & is.na(quadr02_CPE$IMPORT)==FALSE,"IMPORT"])
i_demCPE["Tarragona","IMPORT"]<-sum(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Tarragona"& is.na(quadr02_CPE$DEMARCACIÓ)==FALSE & is.na(quadr02_CPE$IMPORT)==FALSE,"IMPORT"])
i_demCPE["Girona","IMPORT"]<-sum(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Girona"& is.na(quadr02_CPE$DEMARCACIÓ)==FALSE & is.na(quadr02_CPE$IMPORT)==FALSE,"IMPORT"])
i_demCPE["Lleida","IMPORT"]<-sum(quadr02_CPE[quadr02_CPE$DEMARCACIÓ=="Lleida" & is.na(quadr02_CPE$DEMARCACIÓ)==FALSE & is.na(quadr02_CPE$IMPORT)==FALSE,"IMPORT"])
i_demCPE["Barcelona","percentatge"]<-round(100*i_demCPE["Barcelona","IMPORT"]/sum(i_demCPE$IMPORT), digits = 2)
i_demCPE["Tarragona","percentatge"]<-round(100*i_demCPE["Tarragona","IMPORT"]/sum(i_demCPE$IMPORT), digits = 2)
i_demCPE["Girona","percentatge"]<-round(100*i_demCPE["Girona","IMPORT"]/sum(i_demCPE$IMPORT), digits = 2)
i_demCPE["Lleida","percentatge"]<-round(100*i_demCPE["Lleida","IMPORT"]/sum(i_demCPE$IMPORT), digits = 2)
if(sum(i_demCPE$IMPORT, na.rm=TRUE)==0){i_demCPE$percentatge<-0}
write.csv(u_demCPNC,"A5p_udemCPNC.csv",fileEncoding = "UTF-8")
write.csv(u_demLLAR,"A5p_udemLLAR.csv",fileEncoding = "UTF-8")
write.csv(u_demNB,"A5p_udemNB.csv",fileEncoding = "UTF-8")
write.csv(u_demCPE,"A5p_udemCPE.csv",fileEncoding = "UTF-8")
write.csv(i_demCPNC,"A6p_idemCPNC.csv",fileEncoding = "UTF-8")
write.csv(i_demLLAR,"A6p_idemLLAR.csv",fileEncoding = "UTF-8")
write.csv(i_demNB,"A6p_idemNB.csv",fileEncoding = "UTF-8")
write.csv(i_demCPE,"A6p_idemCPE.csv",fileEncoding = "UTF-8")
rm(u_demCPNC, u_demLLAR, u_demNB, u_demCPE, i_demCPNC, i_demLLAR, i_demNB, i_demCPE)
# A.7. Temps mig de retard =================================================#
temps_retard<-data.frame()
temps_retard["Altes","Despeses de la llar"]<-round(30*Resum_motiusLLAR[mesact, "Temps mig altes (mesos)"], digits = 0)
temps_retard["Rehabilitacions","Despeses de la llar"]<-round(30*Resum_motiusLLAR[mesact, "Temps mig rehab. (mesos)"], digits = 0)
temps_retard["Baixes defunció","Despeses de la llar"]<-round(Resum_motiusLLAR[mesact, "Temps mig def.(dies)"], digits = 0)
temps_retard["Baixes revisió","Despeses de la llar"]<-round(Resum_motiusLLAR[mesact, "Temps mig rev.(dies)"], digits = 0)
temps_retard["Altes","CPNC"]<-round(30*Resum_motiusCPNC[mesact, "Temps mig altes (mesos)"], digits = 0)
temps_retard["Rehabilitacions","CPNC"]<-round(30*Resum_motiusCPNC[mesact, "Temps mig rehab. (mesos)"], digits = 0)
temps_retard["Baixes defunció","CPNC"]<-round(Resum_motiusCPNC[mesact, "Temps mig def.(dies)"], digits = 0)
temps_retard["Baixes revisió","CPNC"]<-round(Resum_motiusCPNC[mesact, "Temps mig rev.(dies)"], digits = 0)
temps_retard["Altes","Necessitats bas."]<-round(30*Resum_motiusNB[mesact, "Temps mig altes (mesos)"], digits = 0)
temps_retard["Rehabilitacions","Necessitats bas."]<-round(30*Resum_motiusNB[mesact, "Temps mig rehab. (mesos)"], digits = 0)
temps_retard["Baixes defunció","Necessitats bas."]<-round(Resum_motiusNB[mesact, "Temps mig def.(dies)"], digits = 0)
temps_retard["Baixes revisió","Necessitats bas."]<-round(Resum_motiusNB[mesact, "Temps mig rev.(dies)"], digits = 0)
temps_retard["Altes","CPE"]<-round(30*Resum_motiusCPE[mesact, "Temps mig altes (mesos)"], digits = 0)
temps_retard["Rehabilitacions","CPE"]<-round(30*Resum_motiusCPE[mesact, "Temps mig rehab. (mesos)"], digits = 0)
temps_retard["Baixes defunció","CPE"]<-round(Resum_motiusCPE[mesact, "Temps mig def.(dies)"], digits = 0)
temps_retard["Baixes revisió","CPE"]<-round(Resum_motiusCPE[mesact, "Temps mig rev.(dies)"], digits = 0)
write.csv(temps_retard,"A7b_temps_retard.csv", fileEncoding = "UTF-8")
rm(temps_retard)
# A.8. Import mig per sexe i prestació =====================================#
imig_sexe_prest<-data.frame()
imig_sexe_prest["CPNC", "Import mig dones"]<-round(mean(quadr02_CPNC[quadr02_CPNC$SEXE=="D", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["Despeses de la llar", "Import mig dones"]<-round(mean(quadr02_LLAR[quadr02_LLAR$SEXE=="D", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["Necessitats bas.", "Import mig dones"]<-round(mean(quadr02_NB[quadr02_NB$SEXE=="D", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["CPE", "Import mig dones"]<-round(mean(quadr02_CPE[quadr02_CPE$SEXE=="D", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["CPNC", "Import mig homes"]<-round(mean(quadr02_CPNC[quadr02_CPNC$SEXE=="H", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["Despeses de la llar", "Import mig homes"]<-round(mean(quadr02_LLAR[quadr02_LLAR$SEXE=="H", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["Necessitats bas.", "Import mig homes"]<-round(mean(quadr02_NB[quadr02_NB$SEXE=="H", "IMPORT"], na.rm=TRUE), digits = 2)
imig_sexe_prest["CPE", "Import mig homes"]<-round(mean(quadr02_CPE[quadr02_CPE$SEXE=="H", "IMPORT"], na.rm=TRUE), digits = 2)
write.csv(imig_sexe_prest,"A8b_import_mig.csv", fileEncoding = "UTF-8")
rm(imig_sexe_prest)
# A.9. Import total per any naix. i prestació (scatter) ====================# (estàtic)
imp_edats1<-cbind(quadr02_CPNC[,c("DATANAIX","IMPORT", "EXPEDIENT")], PRESTACIÓ="CPNC")
imp_edats1<-imp_edats1[is.na(imp_edats1$DATANAIX)==FALSE,] # QUÈ PASSA AMB ELS QUE TENEN IMPORT ZERO? ELS HEM DE TREURE??
imp_edats2<-cbind(quadr02_LLAR[,c("DATANAIX","IMPORT", "EXPEDIENT")], PRESTACIÓ="Despeses de la llar")
imp_edats2<-imp_edats2[is.na(imp_edats2$DATANAIX)==FALSE,]
imp_edats3<-cbind(quadr02_NB[,c("DATANAIX","IMPORT", "EXPEDIENT")], PRESTACIÓ="Necessitats bas.")
imp_edats3<-imp_edats3[is.na(imp_edats3$DATANAIX)==FALSE,]
if(nrow(quadr02_CPE)!=0){   # Aquest "if" és super temporal mentre no ens passen els fitxers de CPE
imp_edats4<-cbind(quadr02_CPE[,c("DATANAIX","IMPORT", "EXPEDIENT")], PRESTACIÓ="CPE")
imp_edats4<-imp_edats4[is.na(imp_edats4$DATANAIX)==FALSE,]
}else{
imp_edats4<-data.frame()
}
imp_edats<-cbind.fill(imp_edats1, imp_edats2, imp_edats3, fill=NA)
# imp_edats<-cbind.fill(imp_edats1, imp_edats2, imp_edats3, imp_edats4,fill=NA)
write.csv(imp_edats,"A9s_imp_edats.csv", fileEncoding = "UTF-8")
rm(imp_edats1,imp_edats2,imp_edats3,imp_edats4,imp_edats)
# Si volguéssim un gràfic de punts per només ordinàries o només endarreriments hauríem de recórrer a l'històric d'ordinàries i/o
# l'històric d'endarreriments
# B - GRÀFICS HISTÒRIC =====================================================#
setwd(paste0(path_project, "scripts/graf/global"))
# B1. Import total per prestació
imp_prest<-as.data.frame(cbind(historiccpnc$`Import total`, historicllar$`Import total`, historicnecBas$`Import total`))
rownames(imp_prest)<-rownames(historiccpnc)
colnames(imp_prest)<-c("CPNC", "LLAR", "NB")
imp_prest$CPE<-c(rep(0,84), historiccpe$`Import total`)
#Sys.setlocale("LC_TIME", "Cat") # Deixem els noms en castellà (passen a números)
rownames(imp_prest)<-as.Date(as.yearmon(as.character(rownames(imp_prest), "%d%m%Y")))
write.csv(imp_prest,"B1_import_recurs.csv", fileEncoding = "UTF-8")
# B2. Import total totes les prestacions
imp_Tot<-as.data.frame(apply(imp_prest, 1, sum))
names(imp_Tot)<-"Import"
write.csv(imp_Tot,"B2_import_total.csv", fileEncoding = "UTF-8")
# B3. Nombre d'altes i de baixes totals de Llei 13 (2 línies) --> (ho posem com a conjunt i si volen algo més específic ja ho diran)
altesbaixes<-as.data.frame(historiccpnc$`Altes Totals`)
altesbaixes$Altes_LLAR<-historicllar$`Altes Totals`
altesbaixes$Altes_NB<-historicnecBas$`Altes Totals`
altesbaixes$Altes_CPE<-c(rep(0,84), historiccpe$`Altes Totals`)
altesbaixes$Altes_Totals<-apply(altesbaixes, 1, sum, na.rm=TRUE)
altesbaixes$Baixes_CPNC<-historiccpnc$`Baixes Totals`
altesbaixes$Baixes_LLAR<-historicllar$`Baixes Totals`
altesbaixes$Baixes_NB<-historicnecBas$`Baixes Totals`
altesbaixes$Baixes_CPE<-c(rep(0,84), historiccpe$`Baixes Totals`)
altesbaixes$Baixes_Totals<-apply(altesbaixes[,c(6:9)], 1, sum, na.rm=TRUE)
altesbaixes<-altesbaixes[,c(5,10)]
rownames(altesbaixes)<-as.Date(as.yearmon(as.character(rownames(historiccpnc), "%d%m%Y")))
write.csv(altesbaixes[c(13:nrow(altesbaixes)),],"B3_altes_baixes.csv", fileEncoding = "UTF-8")
# B4. Nombre de baixes segons el motiu de la baixa - (totes les prestacions, ara només em surt despeses de la llar perquè de la resta no tinc info)
baixes_motius<-as.data.frame.matrix(table(historic_baixes$mes_de_la_baixa, historic_baixes$Classif))
baixes_motius$Revisió<-apply(baixes_motius[,c(colnames(baixes_motius)!="Defunció")], 1, sum, na.rm=TRUE)
rownames(baixes_motius)<-as.Date(as.yearmon(as.character(rownames(baixes_motius), "%d%m%Y")))
baixes_motius<-baixes_motius[order(rownames(baixes_motius)),]
write.csv(baixes_motius, "B4_baixes_motius.csv", fileEncoding = "UTF8")
# B5. Temps mig de retard pels diferents motius de baixes - NOMÉS ANUAL (què vol dir només anual?)
# Per calcular el temps de retard
# En principi ja estan en format data de l'apartat 5-guardar històric
# historic_baixes[,"DATABAIXA"]<-as.Date(historic_baixes[,"DATABAIXA"], "%d/%m/%Y")
# historic_baixes[,"DATAEBAIXA"]<-as.Date(historic_baixes[,"DATAEBAIXA"], "%d/%m/%Y")
historic_baixes2<-historic_baixes
historic_baixes2[,"Temps retard (dies)"]<-as.numeric(historic_baixes[,"DATABAIXA"]-historic_baixes[,"DATAEBAIXA"]) # Després ho he de treure
historic_baixes2[historic_baixes2$`Temps retard (dies)`<0 & is.na(historic_baixes2$`Temps retard (dies)`)==FALSE,"Temps retard (dies)"]<-0
# SENSE SEPARAR PER PRESTACIÓ
temps_baixes<-as.data.frame(aggregate(`Temps retard (dies)` ~ mes_de_la_baixa + Classif, historic_baixes2, mean)) ## Però faltaria separar-ho per motius de baixes
temps_baixes$`Temps retard (dies)`<-sapply(temps_baixes$`Temps retard (dies)`, round, digits=2)
b<-data.frame()
b[1:length(unique(temps_baixes$mes_de_la_baixa)),"mes"]<-unique(temps_baixes$mes_de_la_baixa)
noms<-unique(temps_baixes$Classif)
for (i in 1:length(unique(temps_baixes$Classif))){
b[,as.character(noms[i])]<-temps_baixes[temps_baixes[,"Classif"]==noms[i],"Temps retard (dies)"]
}
rownames(b)<-b$mes
b$mes<-NULL
#b<-as.data.frame(lapply(b, as.numeric))
rownames(b)<-as.Date(as.yearmon(as.character(unique(temps_baixes$mes_de_la_baixa), "%d%m%Y")))
b<-b[order(rownames(b)),]
write.csv(b, "B5_temps_retard_baixes.csv", fileEncoding = "UTF8")
# B6. Pagaments indeguts segons el motiu de baixa===========================#
# Primer hem de substituïr les comes per punts --> JA FET
# historic_baixes2$DEUTESPEND<-as.numeric(str_replace_all(string=historic_baixes2$DEUTESPEND, pattern=",", repl="."))
# historic_baixes2$DEUTESVC<-as.numeric(str_replace_all(string=historic_baixes2$DEUTESVC, pattern=",", repl="."))
historic_baixes2[,"Import_inde"]<-historic_baixes2[,paste0("DEUTESPEND ", mesany)]+historic_baixes2[,paste0("DEUTESVC ", mesany)]
indeguts_baixes<-as.data.frame(aggregate(Import_inde ~ mes_de_la_baixa + Classif, historic_baixes2, sum))
inde<-data.frame()
inde[1:length(unique(indeguts_baixes$mes)),"mes"]<-unique(indeguts_baixes$mes_de_la_baixa)
noms<-unique(indeguts_baixes$Classif)
for (i in 1:length(unique(indeguts_baixes$Classif))){
inde[,as.character(noms[i])]<-indeguts_baixes[indeguts_baixes[,"Classif"]==noms[i],"Import_inde"]
}
rownames(inde)<-inde$mes
inde$mes<-NULL
inde<-as.data.frame(lapply(inde, round, digits=2))
inde<-as.data.frame(lapply(inde, abs))
rownames(inde)<-as.Date(as.yearmon(as.character(unique(indeguts_baixes$mes), "%d%m%Y")))
inde<-inde[order(rownames(inde)),]
write.csv(inde, "B6_indeguts_baixes.csv", fileEncoding = "UTF8")
# B7. Endarreriments========================================================#
endarr_tots<-as.data.frame(historiccpnc$`Endarr. totals` )
endarr_tots$LLAR<-historicllar$`Endarr. totals`
endarr_tots$NB<-historicnecBas$`Endarr. totals`
endarr_tots$CPE<-c(rep(0,84), historiccpe$`Endarr. totals`)
#rownames(endarr_tots)<-as.Date(as.yearmon(as.character(rownames(historiccpnc), "%d%m%Y")))
endarr_tots<-endarr_tots[c(84:nrow(endarr_tots)),]
names(endarr_tots)<-c("CPNC", "despeses de la llar","necessitats bàsiques", "CPE" )
endarr_tots<-as.data.frame(lapply(endarr_tots, haz.cero.na))
rownames(endarr_tots)<-as.Date(as.yearmon(as.character(rownames(historiccpnc[c(84:nrow(historiccpnc)),]), "%d%m%Y")))
endarr_tots<-endarr_tots[order(rownames(endarr_tots)),]
write.csv(endarr_tots,"B7_endarreriments.csv", fileEncoding = "UTF-8")
# C - GRÀFICS ANUALS  ======================================================#
#===========================================================================#
setwd(paste0(path_project, "scripts/graf/anual"))
# C1. # Import total per prestació any actual
imp_prest_anual<-imp_prest[(nrow(imp_prest)-12):nrow(imp_prest),]
write.csv(imp_prest_anual,"C1_import_recurs_any.csv", fileEncoding="utf8")
# C2. Import total totes les prestacions any actual
imp_Tot_anual<-as.data.frame(apply(imp_prest_anual, 1, sum))
names(imp_Tot_anual)<-"Import"
write.csv(imp_Tot_anual,"C2_import_total_any.csv", fileEncoding="utf8")
# C3. Nombre d'altes i de baixes totals de Llei 13 -últim any (2 línies) --> (ho posem com a conjunt i si volen algo més específic ja ho diran)
altesbaixes_anual<-altesbaixes[(nrow(altesbaixes)-12):nrow(altesbaixes),]
write.csv(altesbaixes_anual,"C3_altes_baixes_any.csv", fileEncoding="utf8")
# C4. Nombre de baixes segons el motiu de la baixa
if(nrow(baixes_motius)<=12){
baixes_motius_any<-baixes_motius
}else{
baixes_motius_any<-baixes_motius[,c((ncol(baixes_motius)-12):ncol(baixes_motius))]
}
write.csv(baixes_motius_any, "C4_baixes_motius_any.csv", fileEncoding = "UTF8")
# C5. Temps mig de retard pels diferents motius de baixa (últims 13 mesos)
if(nrow(b)<=12){
b_any<-b
}else{
b_any<-b[,c((ncol(b)-12):ncol(b))]
}
write.csv(b_any, "C5_temps_baixes_any.csv", fileEncoding = "UTF8")
# C6. Pagaments indeguts segons el motiu de baixa (últims 13 mesos)
if(nrow(inde)<=12){
inde_any<-inde
}else{
inde_any<-inde[,c((ncol(inde)-12):ncol(inde))]
}
write.csv(inde_any, "C6_indeguts_baixes_any.csv", fileEncoding = "UTF8")
# C7. Endarreriments (agafo els últims 13 mesos)
endarr_tots_anual<-endarr_tots[(nrow(endarr_tots)-12):nrow(endarr_tots),]
write.csv(endarr_tots_anual,"C7_endarreriments.csv", fileEncoding="utf8")
rm(imp_prest,imp_Tot, altesbaixes, baixes_motius,endarr_tots)
rm(imp_prest_anual,imp_Tot_anual,altesbaixes_anual,baixes_motius_any,endarr_tots_anual)
#======================================================================================#
#========================= GUARDEM HISTÒRIC I GUARDEM DADES ===========================#
#======================================================================================#
# GUARDAR HISTÒRICS DE CADA TIPUS DE PRESTACIÓ (HISTÒRICCPNC, HISTÒRICLLAR, HISTÒRICNECBAS..)
rm(list=setdiff(ls(), c("codis","comarques","demarcacions","historic_anys","haz.cero.na",#"mesos",
"historiccpnc","historiccpe","historicllar","historicnecBas","path_R","historic_altes","historic_end","historic_rehab",
"historic_noord","historic_baixes","Resum_motiusNB", "Resum_motiusCPNC","Resum_motiusCPE","Resum_motiusLLAR", "deutes",
"historic_actives", )))
rm(list=setdiff(ls(), c("codis","comarques","demarcacions","historic_anys","haz.cero.na",#"mesos",
"historiccpnc","historiccpe","historicllar","historicnecBas","path_R","historic_altes","historic_end","historic_rehab",
"historic_noord","historic_baixes","Resum_motiusNB", "Resum_motiusCPNC","Resum_motiusCPE","Resum_motiusLLAR", "deutes",
"historic_actives", )))
setwd("C:/xampp/htdocs/PagInicial/scripts")
df<-read.csv("TOTAL.csv",header=T)
setwd("C:/xampp/htdocs/PagInicial/scripts/graf/estatics")
csv<-function(df,catgo,num=F,...){
if(num==F){a<-as.data.frame.matrix(table(df[,catgo]))
}else{a<-as.data.frame.matrix(xtabs(num~.,df[,catgo]))}
return(a)
}
load("C:/xampp/htdocs/GestioDeute/scripts/escenaris/necesitem/historic_w10.RData")
df<-ts(TotalVNP$`Total ord`[-1:-18],freq=12,star=2004)
load("historic_anna_w7.Rdata")
setwd("C:/xampp/htdocs/GestioDeute/scripts/escenaris/necesitem")
load("historic_anna_w7.Rdata")
TotalVNP<-as.data.frame(TotalP[, "VNP ordinària"]) # Total ordinàries
rownames(TotalVNP)<-rownames(TotalP)
colnames(TotalVNP)<-"Total ord"
df<-ts(TotalVNP$`Total ord`[-1:-18],freq=12,star=2004)
View(TotalVNP)
JAB.PREDICTION.EDA <- function(DATOS){
par(mfrow= c(1,2));
hist(DATOS, probability =T);
lines(density(DATOS));
boxplot(DATOS, horizontal=T);
qqnorm(DATOS);
abline(0,1,col="red")
par(mfrow= c(1,1));
}
JAB.PREDICTION.EDA(serie)
serie<-ts(TotalVNP$`Total ord`[-1:-18],freq=12,star=2014)
JAB.PREDICTION.EDA(serie)
JAB.PREDICTION.NORMAL_TESTS <- function(DATAS){
COLUMN_NAMES <- c("SHAPIRO","ANDERSON-DARLING",
"CRAMER-VON MISES","KS","JARQUE-BERA");
DATA <- c();
DATA[1] <- shapiro.test(DATAS)$p.value;
DATA[2] <- ad.test(DATAS)$p.value;
DATA[3] <- cvm.test(DATAS)$p.value;
DATA[4] <- lillie.test(DATAS)$p.value;
DATA[5] <- jarque.bera.test(DATAS)$p.value;
names(DATA) <- COLUMN_NAMES;
print("JAB: NORMAL TEST TABLE 1.0")
print(DATA);
}
JAB.PREDICTION.NORMAL_TESTS(serie)
library("nortest");
#librerias de time series
library("dyn");
library("ArDec");
library("forecast");
library("fBasics");
library("fCalendar");
library("fSeries");
library("tseries");
JAB.PREDICTION.NORMAL_TESTS(serie)
auto.arima(serie)
m1<-arima(serie,c(0,2,1))
#Validación modelo
#Normalidad residuos
shapiro.test(m1$residuals)
#Independencia residuos
Box.test(m1$residuals)
acf(sm,lag=100)
acf(sere,lag=100)
acf(serie,lag=100)
pacf(serie, lag=100)
miSerie = arima.sim(list(order = c(1,1,1), ar=0.5, ma=0.6), sd=1.55, n = 730)
plot(miSerie)
